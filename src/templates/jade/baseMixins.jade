//-------------------------------------------------------------
//-=Mixins
//-------------------------------------------------------------
//- Usage: +style('main.css')
mixin style(relativePath)
  link(rel='stylesheet', href=baseStaticUrl+'/css/'+relativePath)

//- Usage: +script('api.js')
mixin script(relativePath)
  script(src=baseStaticUrl+'/js/'+relativePath)

mixin favicon(url)
  if url
    - var iconUrl = url;
  else
    - var iconUrl = baseStaticUrl+'/favicon.ico';
  link(rel='shortcut icon', href=iconUrl,
      type='image/x-icon')

//-------------------------------
//- Format title automatically
//- Allows passing direct title(s) text or their id by CSS notation
mixin title(mainTitle, subTitle, mainLink, subLink)
  if mainTitle
    if mainLink
      | <a href="#{mainLink}">
    if mainTitle.charAt(0) === '#'
      span.mainTitle(id=mainTitle.slice(1))
    else
      if mainTitle === 'home'
        a(href=baseUrl)
          span.mainTitle= siteTitle
      else
        span.mainTitle= mainTitle
    if mainLink
      | </a>
  if subTitle
    if subLink
      | <a href="#{subLink}">
    if subTitle.charAt(0) === "#"
      span.subTitle(id=subTitle.slice(1))
    else
      span.subTitle= subTitle
    if subLink
      | </a>

mixin userMenuEntry()
  li
    block

mixin pageMenuEntry()
  li
    block

//-------------------------------
mixin help(anchor, helpText)
  - var helpPage = helpPageUrl;
  - function formatAnchor(orig) { return orig.toLowerCase().replace(/ /g, '-'); }
  - var helpSectionUrl = anchor ? helpPage+'#'+formatAnchor(anchor) : false;
  - var helpText = helpText || '';
  span.help
    // question-circle: 
    // question: 
    a.fa-content(target='_blank', href=helpSectionUrl, title=helpText) 

mixin info(infoText)
  - var infoText = infoText || '';
  // info-circle 
  span.info.link.fa-content(title=helpText) 

//-------------------------------
mixin pageIdDeclaration(id)
  if pageId
    != 'var pageId = "'+id+'";'

//- Components
//-------------------------------
mixin banner
  //- <br> Needed if display: inline-block
  br
  #headerBanner&attributes(attributes)
    img#bannerImage
    block

mixin linkPrevious
    a#linkPrevious.fa.fa-angle-left(title='Previous')&attributes(attributes)
      block
mixin linkNext
    a#linkNext.fa.fa-angle-right(title='Next')&attributes(attributes)
      block

mixin linkPage(page)
  - title = l[tit+page]
  a(href=baseStaticUrl+'/'+page.toLowerCase()+'.html', title=title
    )&attributes(attributes)= title



mixin helpAdditionalLinks
  section#helpAdditionalLinks
    nav
      ul
        li: a(href=baseStaticUrl+'/faq.html') #{l.titFAQ}
        li: a(href=baseStaticUrl+'/globalrules.html') #{l.titGlobalRules}
        li: a(href=baseStaticUrl+'/help.html') #{l.titGeneralHelp}
        li: a(href=baseStaticUrl+'/moderation.html') #{l.titModerationHelp}

//-------------------------------------------------------------
//-=Helper functions
//-------------------------------------------------------------
//- Get an object of the form
//-   { string tag, string id, string[] classes }
//- from a string containing a tag in jade syntax
//-   (eg.: 'section#contactInfo.center.secondary' or '#footer' )
- function parseTag(str) { function isSelector(ch) { return ch === '.' || ch === '#'} var tag = '', id = '', classes = []; var inTagName = true, inId = false, inClass = false, classI = -1; function setIn(str) { switch(str) { case 'id': inTagName = false; inId = true; inClass = false; break; case 'class': inTagName = false; inId = false; inClass = true; classes[++classI] = ''; break; } } for (var i = 0, ch; i < str.length; ++i) { ch = str[i]; if (i === 0 && isSelector(ch)) { } if (!isSelector(ch)) { if (inTagName) { tag += ch; } else if (inId) { id += ch; } else if (inClass) { classes[classI] += ch; } } else { if (i === 0) { tag = 'div'; inTagName = false; } if (ch === '.') { setIn('class'); } else if (ch === '#') { setIn('id'); } } } return { tag: tag, id: id, classes: classes }; }
