//-=Mixins
//------------------------------------------------------------
//- Usage: +style('main.css')
mixin style(relativePath)
  link(rel='stylesheet', href=baseStaticUrl+'/css/'+relativePath)

//- Usage: +script('api.js')
mixin script(relativePath)
  script(src=baseStaticUrl+'/'+relativePath)

//- Format title automatically
//- Allows passing direct title(s) text or their id by CSS notation
mixin title(mainTitle, subTitle)
  if mainTitle
    if mainTitle.charAt(0) === '#'
      h1(id=mainTitle.slice(1))
    else
      h1= mainTitle
  if block
    h1
      block
  if subTitle
    if subTitle.charAt(0) === "#"
      p(id=subTitle.slice(1))
    else
      p= subTitle

mixin userMenuEntry()
  li
    block

mixin pageMenuEntry()
  li
    block


//-=Helper functions
//-------------------------------------------------------------
//- Get an object of the form
//-   { string tag, string id, string[] classes }
//- from a string containing a tag in jade syntax
//-   (eg.: 'section#contactInfo.center.secondary' or '#footer' )
-
  function parseTag(str) {
    function isSelector(ch) { return ch === '.' || ch === '#'}
    var tag = '', id = '', classes = []; 
    var inTagName = true, inId = false, inClass = false, classI = -1;
    function setIn(str) { 
      switch(str) {
        case 'id': inTagName = false; inId = true; inClass = false;
          break;
        case 'class': inTagName = false; inId = false;
          inClass = true; classes[++classI] = '';
          break;
      }
    }
    for (var i = 0, ch; i < str.length; ++i) {
      ch = str[i];
      if (i === 0 && isSelector(ch)) {
      }
      if (!isSelector(ch)) {
        if (inTagName) { tag += ch; }
        else if (inId) { id += ch; }
        else if (inClass) { classes[classI] += ch; }
      } else {
      if (i === 0) { tag = 'div'; inTagName = false; }
      if (ch === '.') {
        setIn('class'); }
      else if (ch === '#') {
        setIn('id');
      }
      }
    }
    return { tag: tag, id: id, classes: classes };
  }
