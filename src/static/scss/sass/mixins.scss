@mixin debugBorders($color: #f00) {
  *, *:before, *:after { /* DEBUG */
    border: solid 1px $color !important; /* DEBUG */
  } /* DEBUG */
}

@mixin negatePadding($top: 0, $right: 0, $bottom: 0, $left: 0) {
  @if $top    != 0 { margin-top:    -$top; }
  @if $right  != 0 { margin-right:  -$right; }
  @if $bottom != 0 { margin-bottom: -$bottom; }
  @if $left   != 0 { margin-left:   -$left; }
}

@mixin marginHorizontal($value) {
  margin-left:    $value;
  margin-right:   $value;
}
@mixin marginVertical($value) {
  margin-top:     $value;
  margin-bottom:  $value;
}
@mixin paddingHorizontal($value) {
  padding-left:    $value;
  padding-right: $value;
}
@mixin paddingVertical($value) {
  padding-top:     $value;
  padding-bottom:  $value;
}

@mixin hideLabel($labelForAttribute) {
  label[for=#{$labelForAttribute}] {
    display: none;
  }
}

@mixin font-weight-opt($value) {
  @if type-of($value) == 'number' {
    font-weight: to-font-weight($value);
  } @else if $value {
    font-weight: bold;
  }
}

@mixin minorHeader($font-size: 1.1em, $coverBorder: 1px) {
  font-size: $font-size;
  display: block;
  background-color: $minorHeaderBgColor;
  color: $minorHeaderColor;
  font-weight: to-font-weight($minorHeaderBold);
  //font-family: $monospaceFont;
  @include paddingVertical($defaultPadding / 4);
  @include paddingHorizontal($defaultPadding);

  margin: 0;
  @if $coverBorder {
    margin-top:   -$coverBorder;
    margin-left:  -$coverBorder;
    margin-right: -$coverBorder;
  }
}
