//============================================================
// =Modify
//============================================================

// Mix $color by $weight with the color obtained by calling $function with
//  $color followed by the given arguments.
//------------------------------------------------------------
@function weighted($function, $weight, $color, $args...) {
  // We need to compile a new argument list for call() since the '...'
  //  syntax has no effect when it's not the only argument being passed.
  $compiledArgumentList: ($function, $color);
  @each $arg in $args {
    $compiledArgumentList: append($compiledArgumentList, $arg);
  }
  @return mix(call($compiledArgumentList...), $color, $weight);
}

// Makes color more or less 'intense' compared to a reference
//  color, uses $strongestContrast and $weakerContrast variables
//  obtained from `palette('{fg|bg}{Main|Alt}')` as references.
// ie.: like 'darken()' but will 'lighten()' instead if the reference
//  color is dark.
//------------------------------------------------------------
// Intensify
//------------------------------
@function intensify-saturation($color, $contrastedColor, $weight: 50%) {
  $weightedSaturationContrast: abs($strongestSaturationContrast / 100) *
    contrast($color, $contrastedColor);
 @return mix(
    $color,
    scale-color($color, $lightness: $weightedSaturationContrast),
    $weight);
}
@function intensify-lightness($color, $contrastedColor, $weight: 50%) {
  $weightedContrast: abs($strongestContrast / 100) *
    contrast($color, $contrastedColor);
 @return mix(
    $color,
    scale-color($color, $lightness: $weightedContrast),
    $weight);
}
// Apply all intensify functions
@function intensify($color, $contrastedColor, $weight: 50%) {
  @return intensify-lightness(
    intensify-saturation($color, $contrastedColor, $weight),
    $contrastedColor,
    $weight);
}

// Soften
//------------------------------
@function soften-saturation($color, $contrastedColor, $weight: 50%) {
    $weightedSaturationContrast: abs($weakerSaturationContrast / 100) *
      contrast($color, $contrastedColor);
  @return mix($color,
    scale-color($color, $lightness: -$weightedSaturationContrast),
    $weight);
}
@function soften-lightness($color, $contrastedColor, $weight: 50%) {
  $weightedContrast: abs($weakerContrast / 100) *
    contrast($color, $contrastedColor);
 @return mix(
    $color,
    scale-color($color, $lightness: -$weightedContrast),
    $weight);
}
// Apply all soften functions
@function soften($color, $contrastedColor, $weight: 50%) {
  @return soften-lightness(
    soften-saturation($color, $contrastedColor, $weight),
    $contrastedColor,
    $weight);
}

// Change $color to use the given value form $sourceColor
//------------------------------------------------------------
@function take-red($color, $sourceColor, $weight: 100%) {
  @return mix(change-color($color, $red: red($sourceColor)),
    $color, $weight);
}
@function take-green($color, $sourceColor, $weight: 100%) {
  @return mix(change-color($color, $green: green($sourceColor)),
    $color, $weight);
}
@function take-blue($color, $sourceColor, $weight: 100%) {
  @return mix(change-color($color, $blue: blue($sourceColor)),
    $color, $weight);
}
@function take-hue($color, $sourceColor, $weight: 100%) {
  @return mix(change-color($color, $hue: hue($sourceColor)),
    $color, $weight);
}
@function take-saturation($color, $sourceColor, $weight: 100%) {
  @return mix(change-color($color, $saturation: saturation($sourceColor)),
    $color, $weight);
}
@function take-lightness($color, $sourceColor, $weight: 100%) {
  @return mix(change-color($color, $lightness: lightness($sourceColor)),
    $color, $weight);
}
@function take-alpha($color, $sourceColor, $weight: 100%) {
  @return mix(change-color($color, $alpha: alpha($sourceColor)),
    $color, $weight);
}

//============================================================
// =Get
//============================================================

//   returns: [-100, 100]
//           > 0: dark on light
//           < 0: light on dark
@function contrast-lightness($fgColor, $bgColor) {
  @return lightness($bgColor) - lightness($fgColor);
}
@function contrast($fgColor, $bgColor) { 
  @return contrast-lightness($fgColor, $bgColor);
}

//   returns: [-100, 100]
//           > 0: dull on vibrant
//           < 0: vibrant on dull
@function contrast-saturation($fgColor, $bgColor) {
  @return saturation($bgColor) - saturation($fgColor);
}
