@import '../sass';
//------------------------------
$smallInnerMargin: 0.24em;

$twoColumnPostFormMinWidth: $captchaImageWidth + 40em;

//------------------------------


#postFormWrapper {
  display: inline-block;
  border: $borderStyle $borderWidth $postFormBorderColor;
  background: $postFormBgColor;
  color: $postFormColor;

  @if $shadows {
    box-shadow: 0 0 $shadowsRadius $shadowsColor;
    border-color: soften($postFormBorderColor, $bodyBgColor, (600 * $shadowsAlpha));
  }
}
#postFormWrapper h1 {
  @include narrower($wide) {
    @include minorHeader($coverBorder: 1px);
    text-align: left;
  }

  @include wider($wide) {
    @include minorHeader($coverBorder: 1px);
  }
}


.postForm {
  margin-top: $postFormExternalPadding;
  position: relative;
  display: inline-block;
  text-align: left;

  @include wider($wide) {
    width: $postFormSideInternalWidth + ($postFormExternalPadding * 2);
  }
  @include marginHorizontal(auto);

  padding-bottom: $postFormExternalPadding;

  .field {
    width: 100%;
    text-align: left;

    label {
      vertical-align: middle;
    }
    input {
    }
  }

  label, #files, #filesInfo, #reloadCaptchaButton {
    color: $postFormLabelColor;
  }
}


$postFormRightColdWidth: $captchaImageWidth;
$leftColCompensateRightCol: $postFormRightColdWidth + $internalPadding;

.postFormColLeft {
  width: calc(100% - #{$leftColCompensateRightCol});
  @include wider($wide) {
    width: 100%;
  }
  //width: 100%;
  //margin-right: $leftColCompensateRightCol;
}
#metaFields {
  display: table;
  width: 100%;
  .field {
    display: table-row;
    label {
      display: table-cell;
      padding-right: $internalPadding;
    }
    .inputWrap {
      display: table-cell;
      width: 100%;
      padding-bottom: $smallInnerMargin;
      input {
        width: 100%;
      }
    }
  }
}

.postFormColRight {
  width: $postFormRightColdWidth;
  margin-right: $internalPadding;
  float: right;
  @include wider($wide) {
    margin-left: $internalPadding;
    float: none;
  }
}
#messageArea {
  width: calc(100% - #{$leftColCompensateRightCol});
  @include wider($wide) {
    width: 100%;
  }
  //clear: left;
  padding-top: $smallInnerMargin * 0.1;
}


#metaFields, #messageArea, #messageFiles #captchaDiv {
  @include paddingHorizontal($postFormExternalPadding);
}

#metaFields, #messageArea {
  float: left;
}
#messageFiles, #captchaDiv, #sendPost {
  width: 100%;
  display: inline-block;
}
#messageFiles, #captchaDiv {
  margin-bottom: $internalPadding;
}

#sendPost {
  text-align: left;
}

/* =Fields
 *------------------------------*/
#postFormWrapper label[for='fieldName'] {
}
#postFormWrapper #fieldName {
}

#postFormWrapper label[for='fieldEmail'] {
}
#postFormWrapper #fieldEmail {
}

#postFormWrapper label[for='fieldPostingPassword'] {
}
#postFormWrapper #fieldPostingPassword {
}

label[for='fieldSubject'] {
}
#fieldSubject {
}

@include hideLabel('fieldMessage');
label[for='fieldMessage'] {
}

$textAreaOversizeCompensation: 2px;

#fieldMessage {
  //$widthFallback: 100%;
  //$width: calc(100% - #{$postFormPadding} - #{$textAreaOversizeCompensation});
  $width: 100%;

  $regularHeight: 7.2em;
  $tallHeight: (153 / $emMostCommonPxSize) * 1em;

  //width: $widthFallback;
  width: $width;
  //min-width: $widthFallback;
  min-width: $startingFieldMessageWidth;
  @include wider($wide) {
    width: 100%;
    min-width: 100%;
  }

  height: $regularHeight;
  min-height: $regularHeight;

  @media (min-height: $short) and (min-width: $wide) {
    height: $tallHeight;
    min-height: $tallHeight / 2;
  }
}

#messageFiles {
  @include wider($wide) {
    width: $postFormSideInternalWidth;
  }
}

#filesWrapper {
  @include wider($wide) {
    width: $postFormSideInternalWidth;
  }
  display: block;
}
#filesWrapper > label {
  display: none;
  //vertical-align: middle;
}

#files {
  width: 100%;
  @include wider($wide) {
    width: $postFormSideInternalWidth;
  }
  float: right;
}
#filesInfo {
  display: inline-block;
  clear: right;
  float: right;
}
#filesSpoiler {
  display: inline-block;
  float: left;
}

/* =Captcha
 *------------------------------*/
$captchaCharactersCount: 6;

#captchaDiv {
  width: $captchaImageWidth;
  @include marginHorizontal(auto);
  box-sizing: content-box;

  text-align: left;
}

$captchaImageRatio: 1 / 3;
#captchaImage, label[for="fieldCaptcha"] {
  display: block;
  width: $captchaImageWidth;
  height: $captchaImageWidth * $captchaImageRatio;
}

$fieldCaptchaHeight: 1.5em;

label[for='fieldCaptcha'] {
  @include inputBorder;
}
#fieldCaptcha {
  height: $fieldCaptchaHeight;
  width: #{$captchaCharactersCount}em;
  font-family: $monospaceFont;
}
#reloadCaptchaButton {
  height: $fieldCaptchaHeight;
  margin: 0;
  padding: $textInputsPadding;
}
#fieldCaptcha, #reloadCaptchaButton {
  margin-top: -($inputBorderWidth * 2);
  border-top: none;
}


#noCookiesCaptchaLink {
  float: right;
}

.postSubmit {
  max-width: $postFormSideInternalWidth;
  display: inline-block;
  @include marginHorizontal(auto);
  margin-top: $postFormExternalPadding * 0.6;
  padding: 0.3em 0.6em;
}

#fieldCaptcha, #reloadCaptchaButton {
  background-color: $captchaFieldBgColor;
}

//+.submit to raise specificity
.postSubmit.submit {
  background-color: $postFormSubmitBgColor;
}
