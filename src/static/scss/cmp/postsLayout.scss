@import '../sass';

/* =Board and Thread
 *------------------------------*/
$opBackgroundColor: intensify-lightness(
  palette('bgMain'), palette('fgMain'), 5);
$opColor: palette('fgMain');

$postInternalPadding: $defaultPadding * 0.9;

$postOpInnerBorderColor: intensify($opBackgroundColor, palette('fgMain'), 4);
$postReplyInnerBorderColor: intensify($replyBgColor, palette('fgMain'), 4.5);
$postOpSpecialBorderColor: $minorHeaderBgColor;
$opRegularBorder: 1px solid $postOpInnerBorderColor;

.opWrapper {
  $opBorderTopColor: intensify-lightness($postOpInnerBorderColor,
    palette('fgMain'), 3);
  color: $opColor;
  //background-color: $opBackgroundColor;
  border-top: $opBorderTopColor solid 1px;

  @if $shadows >= 2 {
    box-shadow: 0px #{-($shadowsRadius *1.5)} #{$shadowsRadius * 3} #{-$shadowsRadius * 1.5} $shadowsColor; 
    //box-shadow: 0px 0 ($shadowsRadius * 2) -($shadowsRadius) $shadowsColor;
    //border-top-color: soften-lightness($opBorderTopColor, $bodyBgColor, 30);
  }

  //border-bottom: $opRegularBorder; //set by .labelOmission instead
  /* Special border */
  border-left: 5px /* ($opPaddingLeft - $defaultPadding) */ solid $postOpSpecialBorderColor;
}

$postMessageVerticalPadding: $defaultPadding * 1.2;

.postReply {
  padding-bottom: $postMessageVerticalPadding;
}

$postReplyBorderColor: intensify($replyBgColor, palette('fgMain'), 7);
.postReply {
  border: solid 1px;
  color: $replyColor;
  background-color: $replyBgColor;
  border-size: 1px;
  border-color: $postReplyBorderColor;
  border-style: none solid solid none;
  @if $shadows >= 2 {
    box-shadow: ($shadowsRadius / 2) ($shadowsRadius / 3) $shadowsRadius -($shadowsRadius / 3) $shadowsColor;
    border-color: soften-lightness($postReplyBorderColor, $bodyBgColor, (400 * $shadowsAlpha) );
  }

  margin-left: $replyMarginLeft;
  margin-right: $replyMarginRight;
}

@function chue($val) {
  @return hue($val);
}

@if $markedPost {
  .markedPost .postReply {
    background-color: $markedPostBgColor;
  }
  .markedPost .postReplyHeader .postHeaderInner {
    border-bottom-color: take-color($postReplyBorderColor, $markedPostBgColor);
  }
}


/* Containers
------------------------------*/
/* opCell contains the whole thread, not just the Op */
.opCell {
  padding-bottom: $defaultPadding * 2.5;
}
.postCell {
  margin-top: $defaultPadding / 2.3;
}

.uploadCell {
  display: inline-block;
  padding-right: $postInternalPadding;
  margin: $postInternalPadding / 2 0 0 0;
  //max-width:  $thumbSize;
  //max-height: $thumbSize;
}

.panelUploads {
  float: left;
  //display: inline-table;
  border-collapse: collapse;
  margin-top: -$postMessageVerticalPadding;

  /* eg. 21502435.jpg */
  .nameLink {
    margin-right: 1em;
  }
  /* eg. 41.02 KB, 395x526 */
  .infoLabel {
  }

  .imgLink {
    //display: table-cell;
    min-width: 1em;
    min-height: 1em;
  }

  .imgExpanded {
    max-width: 100%;
    width: 100%;
  }

}


.panelUploads .fileInfo {
 // display: table-caption;
 // caption-side: bottom;
  //line-height: 0.9em;
  overflow: hidden;
  position: relative;
}

.originalNameLink {
  width: 50%;
  max-width: 50%;
  text-overflow: ellipsis;
  overflow: hidden;
  display: block;
}
.uploadCell .fileInfoInner {
  display: block;
  text-overflow: ellipsis;
  width: 100%;

  border-bottom: 1px solid transparent;
  opacity: 0;
  @if $animationSpeed {
    transition: opacity ($animationSpeed * 0.5) ease-in-out;
  }
  overflow: hidden;
}
.opWrapper .uploadCell:hover .fileInfoInner {
  opacity: 1;
  border-bottom-color: $postOpInnerBorderColor;
}
.postCell .uploadCell:hover .fileInfoInner {
  opacity: 1;
  border-bottom-color: $postReplyInnerBorderColor;
}

// Fill width when post has multiple files
.multipleUploads .panelUploads {
  display: block;
  width: 100%;
}

.opWrapper, .postCell {
  display: block;

  article{
    display: inline-block;
  }

  .divMessage {
    display: inline;
    margin: $defaultPadding 0;
  }
}

.labelOmission {
  $topBorderSize: 1px;
  $padding-top: $postInternalPadding / 3; 
  padding-top: $padding-top;
  $margin-left: $postOpMarginLeft;
  margin-left: $margin-left;
  padding-left: $defaultPadding + -$postOpMarginLeft;
  //margin-top: -$topBorderSize; // Compensate so it looks like the border is part of .opWrapper
  //border-top: solid $topBorderSize $postOpInnerBorderColor;

  color: soften-lightness(palette('fgMain'), palette('bgMain'), 70);
  font-size: $smallFontSize * 1.1;
  &:before {
    display: block;
    content: "";
    height: 1px;
    background: linear-gradient(to right,  $postOpInnerBorderColor 30%,rgba(0,0,0,0) 100%);

  margin-left: $postOpMarginLeft + $margin-left;
  margin-top: calc(-#{$topBorderSize} - #{$padding-top}); // Compensate so it looks like the border is part of .opWrapper
  }
}

/* =Post Header
------------------------------------------------------------*/
$postHeaderSmallFontSize: $smallFontSize;
$opHeaderBackgroundColor: transparent!default;
//$replyHeaderBackgroundColor: soften-lightness($postReplyBorderColor, palette('fgAlt'), 25);
$replyHeaderBackgroundColor: transparent!default;
$postOpHeaderColor: soften-lightness(palette('fgAlt'), palette('bgMain'), $fontColorContrast * 100)!default;
$postReplyColor: soften-lightness(palette('fgAlt'), palette('bgAlt'), $fontColorContrast * 100)!default;

.postOpHeader, .postOpHeader a, .fileInfo {
  color: $postOpHeaderColor;
}
.postReplyHeader, .postReplyHeader a, .fileInfo {
  color: $postReplyColor;
}
.postOpHeader a, .postReplyHeader a {
  &:hover {
    color: $linkHoverColor;
  }
}

$postModActionWidth: 1.5em; //deletion checkbox or dropdown menu arrow, MAGIC
.postOpHeader, .postReplyHeader {

  margin-bottom: $postMessageVerticalPadding;

  // header items
  ul {
    display: inline-block;
    float: left;
    position: relative;
    list-style: none;
    padding: 0 0 0 0;//0.15em 0 0 0;
    margin: 0 0 0 0.5em;
  }
  li {
    display: inline-block;
    margin-right: 0.5em;
    &:last-child {
      margin-right: 0.3em;
    }
  }

  .labelCreated, .spanId {
    font-size: $postHeaderSmallFontSize;
  }
  .linkSelf {
    font-size: (1em + $postHeaderSmallFontSize) / 2;
  }
  .spanId {
    margin-left: -0.1em; //Compensate for bigger name and role fonts
  }

}
.postOpHeader {
  background-color: $opHeaderBackgroundColor;
}
.postOpHeader .postHeaderInner {
  display: inline-block;
  border-bottom: 1px solid $postOpInnerBorderColor;
}
.postReplyHeader {
  display: inline-block;
  background-color: $replyHeaderBackgroundColor;
}
.postReplyHeader .postHeaderInner {
  display: inline-block;
  border-bottom: 1px solid $postReplyInnerBorderColor;
}
li.deletionCheckBoxWrap {
  display: inline-block;
  position: relative;
  margin-top: 0.2em;
  height: 1em;
  width: 1em;
}
input[type='checkbox'].deletionCheckBox {
  display: inline;
  //float: left;
  //margin-top: 0.07em; //MAGIC
  //margin-left: 0.07em;
}

.postOpHeader .linkPreviewWrap {
  display: none; /* That link is pretty much useless for the end-users */
}

.postOpHeader, .postReplyHeader {
  li:nth-child(2) {
  }
}

/* =Post Content
------------------------------------------------------------*/
.postContent {
  padding: 0 $postInternalPadding;
}

/* =Preview
------------------------------------------------------------*/
.postPreviewTooltip {
  display: inline-block;
  z-index: 10;

  @if $shadows {
    @include tooltipShadows();
  }
}
